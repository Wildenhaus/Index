<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="TreeView.Static.Background"                      Color="{DynamicResource Color.Primary.1.Background.Static}"/>
    <SolidColorBrush x:Key="TreeView.Static.Border"                          Color="{DynamicResource Color.Primary.1.Border.Static}"/>
    <SolidColorBrush x:Key="TreeView.Disabled.Background"                    Color="{DynamicResource Color.Primary.1.Background.Disabled}"/>
    <SolidColorBrush x:Key="TreeView.Disabled.Border"                        Color="{DynamicResource Color.Primary.1.Border.Disabled}"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill"              Color="Transparent"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke"            Color="{DynamicResource Color.Primary.4.Border.Static}"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill"      Color="{DynamicResource Color.Primary.4.Background.Selected}"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke"    Color="{DynamicResource Color.Primary.4.Border.Selected}"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill"           Color="{DynamicResource Color.Primary.4.Background.MouseOver}"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke"         Color="{DynamicResource Color.Primary.4.Border.MouseOver}"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill"   Color="{DynamicResource Color.Primary.4.Background.Selected.Inactive}"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="{DynamicResource Color.Primary.4.Border.Selected.Inactive}"/>
    <SolidColorBrush x:Key="TreeViewItem.Static.Background"                  Color="Transparent"/>
    <SolidColorBrush x:Key="TreeViewItem.Static.Border"                      Color="{DynamicResource Color.Primary.2.Border.Static}"/>
    <SolidColorBrush x:Key="TreeViewItem.Selected.Background"                Color="{DynamicResource Color.Primary.4.Background.Selected}"/>
    <SolidColorBrush x:Key="TreeViewItem.Selected.Border"                    Color="{DynamicResource Color.Primary.4.Border.Selected}"/>
    <SolidColorBrush x:Key="TreeViewItem.Selected.Inactive.Background"       Color="{DynamicResource Color.Primary.3.Background.Selected.Inactive}"/>
    <SolidColorBrush x:Key="TreeViewItem.Selected.Inactive.Border"           Color="{DynamicResource Color.Primary.3.Border.Selected.Inactive}"/>
    <SolidColorBrush x:Key="TreeViewItem.MouseOver.Background"               Color="{DynamicResource Color.Primary.3.Background.MouseOver}"/>
    <SolidColorBrush x:Key="TreeViewItem.MouseOver.Border"                   Color="{DynamicResource Color.Primary.3.Border.MouseOver}"/>
    <SolidColorBrush x:Key="TreeViewItem.MouseDown.Background"               Color="{DynamicResource Color.Primary.3.Background.MouseDown}"/>
    <SolidColorBrush x:Key="TreeViewItem.MouseDown.Border"                   Color="{DynamicResource Color.Primary.3.Border.MouseDown}"/>


    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource TreeView.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TreeView.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Static}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                        <!-- CanContentScroll must be false, otherwise scrolling breaks -->
                        <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" 
                                      CanContentScroll="false" Focusable="false"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                      Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeView.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TreeView.Disabled.Border}"/>
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Background" Value="{StaticResource TreeViewItem.TreeArrow.Static.Fill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="1" Width="16">
                        <!-- 
                        <Path x:Name="ExpandPath" 
                              Data="{StaticResource TreeArrow}" 
                              Fill="{DynamicResource TreeViewItem.TreeArrow.Static.Fill}"
                              Stroke="{DynamicResource TreeViewItem.TreeArrow.Static.Stroke}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                        -->
                        <Grid>
                            <Rectangle x:Name="ExpandPath"
                                   Fill="{DynamicResource TreeViewItem.TreeArrow.Static.Fill}"
                                   Stroke="{DynamicResource TreeViewItem.TreeArrow.Static.Stroke}" 
                                   StrokeDashArray="2 2"
                                   StrokeThickness="1"/>
                            <Label x:Name="ExpandText" FontSize="14" Margin="0 -2 0 0" Content="+" Padding="0" VerticalAlignment="Top" HorizontalAlignment="Center" Foreground="{DynamicResource AREghZyBrush.Foreground.Static}" FontFamily="Consolas"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Content" TargetName="ExpandText" Value="-"/>
                            <!--
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            -->
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="{StaticResource TreeViewItem.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TreeViewItem.Static.Border}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Static}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" ClickMode="Press" 
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Grid.Column="1" 
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header" ContentSource="Header" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeViewItem.Selected.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TreeViewItem.Selected.Border}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Deeper}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TreeViewItem.Selected.Inactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TreeViewItem.Selected.Inactive.Border}"/>
                            <Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Disabled}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource AREghZyBrush.Foreground.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>