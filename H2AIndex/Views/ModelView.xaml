<view:View x:Class="H2AIndex.Views.ModelView"
           x:TypeArguments="vm:ModelViewModel"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:hx="http://helix-toolkit.org/wpf/SharpDX"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:vm="clr-namespace:H2AIndex.ViewModels"
           xmlns:view="clr-namespace:H2AIndex.Views"
           xmlns:controls="clr-namespace:H2AIndex.Controls"
           mc:Ignorable="d" 
           d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="2" />
            <ColumnDefinition Width="1*" MaxWidth="400" />
        </Grid.ColumnDefinitions>

        <Menu Grid.ColumnSpan="3"
              Grid.Row="0">
            <MenuItem Header="File">
                <MenuItem Header="Export" Command="{Binding ExportModelCommand}" />
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Show Wireframe" IsCheckable="True" IsChecked="{Binding ShowWireframe}" />
                <MenuItem Header="Zoom To Extents" Command="hx:ViewportCommands.ZoomExtents" />
            </MenuItem>
        </Menu>

        <hx:Viewport3DX x:Name="Viewport"
                        Grid.Column="0"
                        Grid.Row="1"
                        Camera="{Binding Camera}"
                        Background="{DynamicResource Brush.Deep.2.Background.Static}"
                        BackgroundColor="{DynamicResource Color.Deep.2.Background.Static}"
                        TextBrush="Wheat"
                        Foreground="White"
                        CameraMode="Inspect"
                        CameraRotationMode="Turntable"
                        EnableSwapChainRendering="False"
                        FXAALevel="Low"
                        EffectsManager="{Binding EffectsManager}"
                        IsHitTestVisible="True"
                        IsMoveEnabled="True"
                        EnableRenderFrustum="False">

            <hx:Viewport3DX.InputBindings>
                <MouseBinding Command="hx:ViewportCommands.Rotate" Gesture="RightClick" />
                <MouseBinding Command="hx:ViewportCommands.Zoom" Gesture="MiddleClick" />
                <MouseBinding Command="hx:ViewportCommands.Pan" Gesture="LeftClick" />
            </hx:Viewport3DX.InputBindings>


            <hx:DirectionalLight3D Direction="{Binding Camera.LookDirection}" Color="#FFF" />

            <hx:Element3DPresenter Content="{Binding Model}" >
            </hx:Element3DPresenter>
        </hx:Viewport3DX>

        <GridSplitter Grid.Column="1" Grid.Row="1" HorizontalAlignment="Stretch" />

        <Grid Grid.Column="2" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="20" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--#region Header -->

            <Border Grid.Row="0"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource Brush.Primary.3.Border.Static}"
                    Background="{DynamicResource Brush.Primary.3.Background.Static}"
                    HorizontalAlignment="Stretch">
                <DockPanel HorizontalAlignment="Stretch">

                    <Label Content="Node Tree"
                           FontSize="14"
                           FontWeight="SemiBold"
                           Margin="0"
                           Padding="5,2"
                           DockPanel.Dock="Left"
                           VerticalAlignment="Center" />

                    <StackPanel DockPanel.Dock="Right"
                            Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center">

                        <Button x:Name="BtnDropdown"
                                Padding="0"
                                Background="Transparent">
                            <Button.Content>
                                <Path Data="{Binding Source={StaticResource Icon_Dropdown}, Path=Data}"
                                      Fill="{DynamicResource Brush.Glyph.Static}"
                                      Stretch="Uniform"
                                      Width="8"
                                      Height="8" />
                            </Button.Content>
                            <Button.ContextMenu>
                                <ContextMenu Loaded="OnContextMenuLoaded">
                                    <MenuItem Header="Show All" Command="{Binding ShowAllCommand}" />
                                    <MenuItem Header="Hide All" Command="{Binding HideAllCommand}" />
                                    <Separator />
                                    <MenuItem Header="Hide LODs" Command="{Binding HideLODsCommand}" />
                                    <MenuItem Header="Hide Volumes" Command="{Binding HideVolumesCommand}" />
                                </ContextMenu>
                            </Button.ContextMenu>
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="Click">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                        </BooleanAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        
                        <Button x:Name="BtnExpandAll" 
                                Padding="0"
                                Background="Transparent"
                                ToolTip="Expand All Nodes"
                                Command="{Binding ExpandAllCommand}">
                            <Button.Content>
                                <Path Data="{Binding Source={StaticResource Icon_Expand}, Path=Data}"
                                      Fill="{DynamicResource Brush.Glyph.Static}" 
                                      Stretch="Uniform"
                                      Width="14"
                                      Height="14" />
                            </Button.Content>
                        </Button>

                        <Button x:Name="BtnCollapseAll" 
                                Padding="0"
                                Background="Transparent"
                                ToolTip="Collapse All Nodes"
                                Command="{Binding CollapseAllCommand}">
                            <Button.Content>
                                <Path Data="{Binding Source={StaticResource Icon_Collapse}, Path=Data}"
                                      Fill="{DynamicResource Brush.Glyph.Static}" 
                                      Stretch="Uniform"
                                      Width="14"
                                      Height="14" />
                            </Button.Content>
                        </Button>

                    </StackPanel>

                </DockPanel>
            </Border>

            <!--#endregion-->

            <controls:SearchBox Grid.Row="1"
                                TextChangedCommand="{Binding SearchTermChangedCommand}" />

            <TreeView Grid.Row="2" 
                      ItemsSource="{Binding Nodes}"
                      VirtualizingPanel.IsContainerVirtualizable="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.IsVirtualizingWhenGrouping="True">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                        <CheckBox IsChecked="{Binding IsVisible}" Content="{Binding Name}" Focusable="False" FocusVisualStyle="{x:Null}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

        </Grid>

    </Grid>
</view:View>
