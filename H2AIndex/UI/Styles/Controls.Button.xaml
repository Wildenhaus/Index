<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="Button.Static.Background"    Color="{DynamicResource Color.Primary.2.Background.Static}"/>
    <SolidColorBrush x:Key="Button.Static.Border"        Color="{DynamicResource Color.Primary.2.Border.Static}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{DynamicResource Color.Primary.2.Background.MouseOver}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border"     Color="{DynamicResource Color.Primary.2.Border.MouseOver}"/>
    <SolidColorBrush x:Key="Button.Pressed.Background"   Color="{DynamicResource Color.Primary.2.Background.MouseDown}"/>
    <SolidColorBrush x:Key="Button.Pressed.Border"       Color="{DynamicResource Color.Primary.2.Border.MouseDown}"/>
    <SolidColorBrush x:Key="Button.Disabled.Background"  Color="{DynamicResource Color.Primary.2.Background.Disabled}"/>
    <SolidColorBrush x:Key="Button.Disabled.Border"      Color="{DynamicResource Color.Primary.2.Border.Disabled}"/>
    <SolidColorBrush x:Key="Button.Static.Foreground"    Color="{DynamicResource Color.Foreground.Static}"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground"  Color="{DynamicResource Color.Foreground.Disabled}"/>
    <SolidColorBrush x:Key="Button.Defaulted.Border"     Color="{DynamicResource Color.Primary.2.Border.Static}"/>

    <SolidColorBrush x:Key="ToggleButton.IsChecked.Background"           Color="{DynamicResource Color.Primary.2.Border.Selected}"/>
    <SolidColorBrush x:Key="ToggleButton.IsChecked.Border"               Color="{DynamicResource Color.Primary.2.Border.Selected}"/>
    <SolidColorBrush x:Key="ToggleButton.Pressed.IsChecked.Background"   Color="{DynamicResource Color.Primary.3.Border.Selected}"/>
    <SolidColorBrush x:Key="ToggleButton.Pressed.IsChecked.Border"       Color="{DynamicResource Color.Primary.3.Border.Selected}"/>
    <SolidColorBrush x:Key="ToggleButton.MouseOver.IsChecked.Background" Color="{DynamicResource Color.Primary.4.Border.Selected}"/>
    <SolidColorBrush x:Key="ToggleButton.MouseOver.IsChecked.Border"     Color="{DynamicResource Color.Primary.4.Border.Selected}"/>
    
    <Style x:Key="DefaultButtonStyle" 
           TargetType="{x:Type Button}" 
           BasedOn="{StaticResource {x:Type Button}}" />

    <Style x:Key="FooterButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="20,0" />
    </Style>

    <Style x:Key="ColorfulFooterButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ColorfulButton}">
        <Setter Property="Padding" Value="20,0" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="PART_Border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="PART_ContentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource Button.Defaulted.Border}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource Button.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource Button.Pressed.Background}" />
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource Button.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource Button.Disabled.Border}" />
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{DynamicResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorfulButton" 
           TargetType="{x:Type Button}" 
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource Brush.ColourfulGlyph.Static}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="PART_Border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="PART_ContentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource Button.Defaulted.Border}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource Brush.ColourfulGlyph.MouseOver}" />
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource Button.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource Brush.ColourfulGlyph.MouseDown}" />
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource Brush.ColourfulGlyph.Disabled}" />
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource Button.Disabled.Border}" />
                            <Setter Property="TextElement.Foreground" TargetName="PART_ContentPresenter" Value="{DynamicResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Defaulted.Border}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Pressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ToggleButton.IsChecked.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ToggleButton.IsChecked.Border}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ToggleButton.Pressed.IsChecked.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ToggleButton.Pressed.IsChecked.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ToggleButton.MouseOver.IsChecked.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ToggleButton.MouseOver.IsChecked.Border}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>